{"version":3,"sources":["webpack:///./src/components/category.js","webpack:///./src/components/rating.js","webpack:///./src/components/searchResult.js","webpack:///./src/components/resultTitle.js","webpack:///./src/components/FilterOptions.js","webpack:///./src/logic/mapWeekday.js","webpack:///./src/logic/getPriceState.js","webpack:///./src/logic/filterKeyword.js","webpack:///./src/logic/date.js","webpack:///./src/index.js","webpack:///./src/logic/openTime.js"],"names":["Category","_ref","options","updateKeyword","categories","map","opt","index","react_default","a","createElement","onClick","key","className","Rating","newScore","val","precision","Math","round","pow","roundDecimal","score","stars","Array","from","length","fill","starType","type","rating_Star","id","Star","_ref2","full","half","empty","ResultList","date","list","results","item","searchResult_ResultItem","resultId","data","ResultItem","todayOpenTime","hours","filter","slot","open","some","day","weekDay","display","start","end","categoriesTitle","title","src","photos","name","rating_Rating","rating","review_count","price","location","address1","city","ResultTitle","count","FilterOptions","updatePrice","updateOpenTime","isOpenNow","isFirstToggle","priceFilter","Object","keys","openNowBtn","mapWeekDay","jsWeekDay","isAllPirceOptSelected","every","onlyCurrentOptSelected","current","allSelectedOpt","matchCategories","keyword","alias","toLowerCase","includes","today","now","Date","getYear","getMonth","getDate","App","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","state","$","$$","$$$","$$$$","getDay","forEach","bind","React","Component","itemListData","jsonData","search","business","sort","itemA","itemB","setState","e","currentTarget","value","prevState","updateOption","option","assign","priceTag","getPriceState","_this2","getHours","getMinutes","dayOpenTime","_slot$open$dayOpenTim","isRestaurantOpenNow","word","isMatchKeyword","placeholder","onChange","updateDate","category_Category","resultTitle_ResultTitle","FilterOptions_FilterOptions","upateDate","searchResult_ResultList","ReactDOM","render","src_App","document","getElementById"],"mappings":"sskCACaA,EAAW,SAAAC,GAA8B,IAA5BC,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,cAC3BC,EAAaF,EAAQG,IAAI,SAACC,EAAKC,GAAN,OAC7BC,EAAAC,EAAAC,cAAA,MACEC,QAAS,kBAAMR,EAAcG,IAC7BM,IAAA,gBAAqBL,GACpBD,KAGL,OAAOE,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cAAcT,ICNxBU,eAAS,SAAAb,GAAa,IAS7Bc,EARe,SAASC,EAAKC,GAC/B,OACEC,KAAKC,MACHD,KAAKC,MAAMH,EAAME,KAAKE,IAAI,IAAKH,GAAa,GAAK,IAAM,IACrDC,KAAKE,IAAI,GAAIH,GAAa,GAInBI,CATkBpB,EAAXqB,MASa,GAC/BC,EAAQC,MAAMC,MAAMC,OAAQ,IAC7BC,KAAK,GACLtB,IAAI,SAACuB,EAAUrB,GACd,IAAIsB,EAAO,GAOX,OALEA,EADEd,EAAW,EACNA,GAAY,EAAI,OAAS,OAEzB,QAETA,IACOP,EAAAC,EAAAC,cAACoB,GAAKlB,IAAKL,EAAOsB,KAAMA,MAEnC,OAAOrB,EAAAC,EAAAC,cAAA,OAAKqB,GAAG,gBAAgBR,KAG3BS,EAAO,SAAAC,GAAY,IAAVJ,EAAUI,EAAVJ,KAMb,OAAOrB,EAAAC,EAAAC,cAAA,QAAMG,WAJXqB,KAAM,OACNC,KAAM,OACNC,MAAO,SAEwBP,MC9BtBQ,EAAa,SAAApC,GAAiC,IAA/BqC,EAA+BrC,EAA/BqC,KAAMC,EAAyBtC,EAAzBsC,KAAMpC,EAAmBF,EAAnBE,cACtC,IAAKoC,EAAKb,OACR,OAAOlB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAf,0BAET,IAAM2B,EAAUD,EAAKlC,IAAI,SAACoC,EAAMlC,GAC9B,OACEC,EAAAC,EAAAC,cAAA,OAAKE,IAAA,eAAoBL,GACvBC,EAAAC,EAAAC,cAACgC,GACCJ,KAAMA,EACNK,SAAUpC,EAAQ,EAClBqC,KAAMH,EACNtC,cAAeA,OAMvB,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACC8B,IAKDK,EAAa,SAAAZ,GAA2C,IAAzCK,EAAyCL,EAAzCK,KAAMK,EAAmCV,EAAnCU,SAAUC,EAAyBX,EAAzBW,KAAMzC,EAAmB8B,EAAnB9B,cAIrC2C,EAHWF,EAAKG,MAAMC,OAAO,SAAAC,GAAA,OAC/BA,EAAKC,KAAKC,KAAK,SAAAC,GAAA,OAAOA,EAAIA,MAAQd,EAAKe,YAEZhD,IAAI,SAAA4C,GAAA,OAC/BA,EAAKC,KAAKF,OAAO,SAAAI,GAAA,OAAOA,EAAIA,MAAQd,EAAKe,UAAShD,IAAI,SAAC+C,EAAK7C,GAC1D,OACEC,EAAAC,EAAAC,cAAA,QAAME,IAAA,aAAkBL,GACX,IAAVA,GAAeC,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cAAhB,gBAA2CyB,EAAKgB,QAAhD,OAAN,KACf/C,EAAQ,GAAK,KACdC,EAAAC,EAAAC,cAAA,YACG0C,EAAIG,MADP,MACiBH,EAAII,UAOzBC,EAAkBb,EAAKxC,WAAWC,IAAI,SAACoC,EAAMlC,GAAP,OACxCC,EAAAC,EAAAC,cAAA,KACEE,IAAA,oBAAyBL,EACzBI,QAAS,WACPR,EAAcsC,EAAKiB,SAEpBjB,EAAKiB,MACLnD,IAAUqC,EAAKxC,WAAWsB,OAAS,EAAI,IAAM,GAAI,OAItD,OACElB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKiD,IAAKf,EAAKgB,OAAO,MAExBpD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGiC,EADH,IACcC,EAAKiB,MAEnBrD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAACoD,GAAOxC,MAAOsB,EAAKmB,SACpBvD,EAAAC,EAAAC,cAAA,QAAMG,UAAU,WACb+B,EAAKoB,aADR,aAIFxD,EAAAC,EAAAC,cAAA,WACGkC,EAAKqB,MADR,MACkBR,IAGpBjD,EAAAC,EAAAC,cAAA,YACCoC,EACDtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cAAhB,aADF,IACiD+B,EAAKsB,SAASC,SAD/D,MAC4EvB,EAAKsB,SAASE,KAD1F,SC/EKC,EAAc,SAAApE,GAAa,IAAXqE,EAAWrE,EAAXqE,MAC3B,OACE9D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,YAAO4D,EAAP,8BCDOC,SAAgB,SAAAtE,GAMvB,IALJgE,EAKIhE,EALJgE,MACAO,EAIIvE,EAJJuE,YACAC,EAGIxE,EAHJwE,eACAC,EAEIzE,EAFJyE,UACAC,EACI1E,EADJ0E,cAEMC,EAAcC,OAAOC,KAAKb,GAAO5D,IAAI,SAACC,EAAKC,GAAN,OACzCC,EAAAC,EAAAC,cAAA,KACEG,UAAWoD,EAAM3D,KAASqE,EAAgB,KAAO,GACjD/D,IAAA,gBAAqBL,EACrBI,QAAS,kBAAM6D,EAAYlE,KAC1BA,KAGCyE,EACJvE,EAAAC,EAAAC,cAAA,KACEG,UAAW6D,EAAY,qBAAuB,cAC9C/D,QAAS,kBAAM8D,MAFjB,YAMF,OACEjE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACZ+D,EACDpE,EAAAC,EAAAC,cAAA,YAAOqE,MC5BAC,EAAa,SAAAC,GACxB,OAAqB,IAAdA,EAAkB,EAAIA,EAAY,GCuCrCC,EAAwB,SAAAjB,GAC5B,OAAOY,OAAOC,KAAKb,GAAOkB,MAAM,SAAA7E,GAAA,OAAO2D,EAAM3D,MAGzC8E,EAAyB,SAACnB,EAAOoB,GACrC,IAAIC,EAAiBT,OAAOC,KAAKb,GAAOjB,OAAO,SAAA1C,GAAA,OAAO2D,EAAM3D,KAC5D,OAC4B,IAA1BgF,EAAe5D,QACX4D,EAAe,KAAOD,GACtBpB,EAAMoB,IC9BRE,EAAkB,SAACnF,EAAYoF,GACnC,OAAOpF,EAAW+C,KAChB,SAAAV,GAAA,OACEA,EAAKgD,MAAMC,cAAcC,SAASH,IAC5B/C,EAAKiB,MAAMgC,cAAcC,SAASH,MCvBjCI,EAAQ,WACnB,IAAIC,EAAM,IAAIC,KAId,OAHUD,EAAIE,UAAY,IAAO,IAGjC,KAFSF,EAAIG,WAAa,GAAK,IAAMH,EAAIG,WAAaH,EAAIG,YAE1D,KADSH,EAAII,UAAY,GAAK,IAAMJ,EAAII,UAAYJ,EAAII,qQCYpDC,cACJ,SAAAA,EAAYC,gGAAOC,CAAAC,KAAAH,GAAA,IAAAI,mKAAAC,CAAAF,MAAAH,EAAAM,WAAA3B,OAAA4B,eAAAP,IAAAQ,KAAAL,KACXF,IADW,OAGjBG,EAAKK,OAEHnB,QAAS,GAGTb,eAAe,EAGfV,OAAQ2C,GAAG,EAAMC,IAAI,EAAMC,KAAK,EAAMC,MAAM,GAG5CrC,WAAW,EAEXpC,MAAOgB,QAASsC,IAASvC,QAAS2B,GAAW,IAAIc,MAAOkB,aAIxD,gBACA,cACA,iBACA,cACAC,QAAQ,SAAApD,GACRyC,EAAKzC,GAAQyC,EAAKzC,GAAMqD,KAAXZ,KAzBEA,qUADHa,IAAMC,0DAgCpB,IAAMC,EAAeC,EAAS1E,KAAK2E,OAAOC,SAASC,KACjD,SAACC,EAAOC,GAAR,OAAkBA,EAAM5D,OAAS2D,EAAM3D,SAGzCsC,KAAKuB,UAAUrF,KAAM8E,uCAEZQ,GACTxB,KAAKuB,UACHtF,MACEgB,QAASuE,EAAEC,cAAcC,MACzB1E,QAAS2B,EAAW,IAAIc,KAAK+B,EAAEC,cAAcC,OAAOf,mDAI5CxB,GACZa,KAAKuB,UAAUpC,QAASA,wCAEdlF,GACV+F,KAAKuB,SAAS,SAAAI,GAAA,OH7DW,SAACA,EAAW1H,GAAQ,IAC1C2D,EAAwB+D,EAAxB/D,MAEL,GAF6B+D,EAAjBrD,eAESO,EAAsBjB,GAAQ,CACjD,IAAIgE,KACJ,IAAK,IAAIC,KAAUF,EAAU/D,MACvB+D,EAAU/D,MAAMiE,IAAWA,IAAW5H,IACxC2H,EAAaC,IAAU,GAG3B,OACEvD,eAAe,EACfV,MAAOY,OAAOsD,OAAOH,EAAU/D,MAAOgE,IAI1C,GAAI7C,EAAuBnB,EAAO3D,GAAM,CACtC,IAAI2H,KACJ,IAAK,IAAIC,KAAUF,EAAU/D,MAC3BgE,EAAaC,IAAU,EAEzB,OACEvD,eAAe,EACfV,MAAOgE,GAIX,IAAIG,KAEJ,OADAA,EAAS9H,IAAQ0H,EAAU/D,MAAM3D,IAE/BqE,eAAe,EACfV,MAAOY,OAAOsD,OAAOH,EAAU/D,MAAOmE,IG8BXC,CAAcL,EAAW1H,8CAGpD+F,KAAKuB,SAAS,SAAAI,GACZ,OACEtD,WAAYsD,EAAUtD,UACtBpC,MACEgB,QAASsC,IACTvC,QAAS2B,GAAW,IAAIc,MAAOkB,+CAM9B,IAAAsB,EAAAjC,KACH9D,EAAO8D,KAAKM,MAAMpE,SAwBtB,OArBIA,EAAKb,SACPa,EAAOA,EAAKS,OAAO,SAACP,EAAMlC,GACxB,OACE+H,EAAK3B,MAAM1C,MAAMxB,EAAKwB,QACXqE,EAAK3B,MAAMhC,eAAgC,OAAflC,EAAKwB,SAM9CoC,KAAKM,MAAMjC,YACbnC,EAAOA,EAAKS,OAAO,SAAAP,GAAA,OC7FU,SAACM,GAClC,IAAIM,EAAU2B,GAAW,IAAIc,MAAOkB,UAGhCnB,EAAM,IAFI,IAAIC,MAAOyC,YACZ,IAAIzC,MAAO0C,aAGxB,OAAOzF,EAAMI,KAAK,SAAAF,GAEhB,IAAK,IAAIwF,KAAexF,EAAKC,KAC3B,GACED,EAAKC,KAAKuF,IACFxF,EAAKC,KAAKuF,GAAarF,MAAQC,EACvC,KAAAqF,EACmBzF,EAAKC,KAAKuF,GAAxBlF,EADLmF,EACKnF,MAAOC,EADZkF,EACYlF,IAKZ,GAFaD,GAASsC,GAAOA,GAAOrC,GACvBA,GAAOD,IAAUsC,GAAOrC,GAAOqC,GAAOtC,GAEjD,OAAO,EAIb,OAhBa,IDsFgBoF,CAAoBlG,EAAKM,UAIlDsD,KAAKM,MAAMnB,UACbjD,EAAOA,EAAKS,OAAO,SAAAP,GAAA,OF/FK,SAACA,EAAM+C,GACnC,IAAIoD,EAAOpD,EAAQE,cACnB,OACEjD,EAAKoB,KAAK6B,cAAcC,SAASiD,IAC7BrD,EAAgB9C,EAAKrC,WAAYwI,GE4FjCC,CAAepG,EAAM6F,EAAK3B,MAAMnB,QAAQE,kBAK1ClF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,SACEmB,KAAK,OACLkG,MAAO1B,KAAKM,MAAMnB,QAClBsD,YAAY,oBACZC,SAAU,SAAAlB,GAAA,OACRS,EAAKV,UACHpC,QAASqC,EAAEC,cAAcC,WAI/BvH,EAAAC,EAAAC,cAAA,SACEG,UAAU,OACVgB,KAAK,OACLkG,MAAO1B,KAAKM,MAAMrE,KAAKgB,QACvByF,SAAU1C,KAAK2C,cAGnBxI,EAAAC,EAAAC,cAACuI,GACC9I,cAAekG,KAAKlG,cACpBD,SACE,UACA,UACA,WACA,SACA,iBAKRM,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwI,GAAY5E,MAAO/B,EAAKb,SACzBlB,EAAAC,EAAAC,cAACyI,GACCxE,cAAe0B,KAAKM,MAAMhC,cAC1BV,MAAOoC,KAAKM,MAAM1C,MAClBS,UAAW2B,KAAKM,MAAMjC,UACtBF,YAAa6B,KAAK7B,YAClBwE,WAAY3C,KAAK+C,UACjB3E,eAAgB4B,KAAK5B,iBAEvBjE,EAAAC,EAAAC,cAAC2I,GACClJ,cAAekG,KAAKlG,cACpBoC,KAAMA,EACND,KAAM+D,KAAKM,MAAMrE,mBAS/BgH,IAASC,OAAO/I,EAAAC,EAAAC,cAAC8I,EAAD,MAASC,SAASC,eAAe","file":"main.e29d.js","sourcesContent":["import React from \"react\";\nexport const Category = ({options, updateKeyword}) => {\n  const categories = options.map((opt, index) => (\n    <li\n      onClick={() => updateKeyword(opt)}\n      key={`category-opt-${index}`}>\n      {opt}\n    </li>\n  ));\n  return <ul className=\"categories\">{categories}</ul>;\n};\n","import \"../style/star.scss\";\nimport React from \"react\";\n\nexport const Rating = ({score}) => {\n  var roundDecimal = function(val, precision) {\n    return (\n      Math.round(\n        Math.round(val * Math.pow(10, (precision || 0) + 1)) / 10\n      ) / Math.pow(10, precision || 0)\n    );\n  };\n\n  let newScore = roundDecimal(score, 1);\n  let stars = Array.from({length: 5})\n    .fill(0)\n    .map((starType, index) => {\n      let type = \"\";\n      if (newScore > 0) {\n        type = newScore >= 1 ? \"full\" : \"half\";\n      } else {\n        type = \"empty\";\n      }\n      newScore--;\n      return <Star key={index} type={type} />;\n    });\n  return <div id=\"star-wrapper\">{stars}</div>;\n};\n\nconst Star = ({type}) => {\n  const starType = {\n    full: \"full\",\n    half: \"half\",\n    empty: \"empty\"\n  };\n  return <span className={starType[type]} />;\n};\n","import React from \"react\";\nimport \"../style/resultItem.scss\";\nimport {Rating} from \"./rating.js\";\n\nexport const ResultList = ({date, list, updateKeyword}) => {\n  if (!list.length) {\n    return <div className=\"empty-result\">No Matched Restaurants</div>;\n  }\n  const results = list.map((item, index) => {\n    return (\n      <div key={`result-item-${index}`}>\n        <ResultItem\n          date={date}\n          resultId={index + 1}\n          data={item}\n          updateKeyword={updateKeyword}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h5>Sort by rating</h5>\n      {results}\n    </div>\n  );\n};\n\nconst ResultItem = ({date, resultId, data, updateKeyword}) => {\n  let filtered = data.hours.filter(slot =>\n    slot.open.some(day => day.day === date.weekDay)\n  );\n  let todayOpenTime = filtered.map(slot =>\n    slot.open.filter(day => day.day === date.weekDay).map((day, index) => {\n      return (\n        <span key={`open-time-${index}`}>\n          {index === 0 && <span><span className=\"line-title\"> Open hours ({date.display}) :</span> </span>}\n          {index > 0 && \", \"}\n          <span>\n            {day.start} ~ {day.end}\n          </span>\n        </span>\n      );\n    })\n  );\n\n  let categoriesTitle = data.categories.map((item, index) => (\n    <a\n      key={`categories-title-${index}`}\n      onClick={() => {\n        updateKeyword(item.title);\n      }}>\n      {item.title}\n      {index !== data.categories.length - 1 ? \",\" : \"\"}{\" \"}\n    </a>\n  ));\n\n  return (\n    <div className=\"result-item\">\n      <div className=\"photo-box\">\n        <img src={data.photos[0]} />\n      </div>\n      <div className=\"info\">\n        <div>\n          <h4>\n            {resultId} {data.name}\n          </h4>\n          <div className=\"rating-row\">\n            <Rating score={data.rating} />\n            <span className=\"reviews\">\n              {data.review_count} reviews\n            </span>\n          </div>\n          <div>\n            {data.price} - {categoriesTitle}\n          </div>\n        </div>\n        <div />\n        {todayOpenTime}\n        <div>\n          <span className=\"line-title\">Address :</span> {data.location.address1} ( {data.location.city} )\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nexport const ResultTitle = ({count}) => {\n  return (\n    <div className=\"result-title\">\n      <span>{count} restanrants near Taipei</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"../style/filterOptions.scss\";\n\nexport const FilterOptions = ({\n  price,\n  updatePrice,\n  updateOpenTime,\n  isOpenNow,\n  isFirstToggle\n}) => {\n  const priceFilter = Object.keys(price).map((opt, index) => (\n    <a\n      className={price[opt] && !isFirstToggle ? \"on\" : \"\"}\n      key={`price-filter-${index}`}\n      onClick={() => updatePrice(opt)}>\n      {opt}\n    </a>\n  ));\n  const openNowBtn = (\n    <a\n      className={isOpenNow ? \"opennow-btn active\" : \"opennow-btn\"}\n      onClick={() => updateOpenTime()}>\n            Open Now\n    </a>\n  );\n  return (\n    <div className=\"filter-options\">\n      {priceFilter}\n      <span>{openNowBtn}</span>\n    </div>\n  );\n};\n","export const mapWeekDay = jsWeekDay => {\n  return jsWeekDay === 0 ? 6 : jsWeekDay - 1;\n};\n","/*\n * change price filter options base on a selected pirce tag \n * @param prevState object prevState of App\n * return Object new price state\n */\nexport const getPriceState = (prevState, opt) => {\n  let {price, isFirstToggle} = prevState;\n\n  if (isFirstToggle && isAllPirceOptSelected(price)) {\n    let updateOption = {};\n    for (let option in prevState.price) {\n      if (prevState.price[option] && option !== opt) {\n        updateOption[option] = false;\n      }\n    }\n    return {\n      isFirstToggle: false,\n      price: Object.assign(prevState.price, updateOption)\n    };\n  }\n\n  if (onlyCurrentOptSelected(price, opt)) {\n    let updateOption = {};\n    for (let option in prevState.price) {\n      updateOption[option] = true;\n    }\n    return {\n      isFirstToggle: true,\n      price: updateOption\n    };\n  }\n\n  let priceTag = {};\n  priceTag[opt] = !prevState.price[opt];\n  return {\n    isFirstToggle: false,\n    price: Object.assign(prevState.price, priceTag)\n  };\n};\n\nconst isAllPirceOptSelected = price => {\n  return Object.keys(price).every(opt => price[opt]);\n};\n\nconst onlyCurrentOptSelected = (price, current) => {\n  let allSelectedOpt = Object.keys(price).filter(opt => price[opt]);\n  return (\n    allSelectedOpt.length === 1 &&\n        allSelectedOpt[0] === current &&\n        price[current]\n  );\n};\n","/*\n * @param item object\n * @param keyword string\n * return boolean true if current restaurant's name match keyword, otherwise return false\n */\nexport const isMatchKeyword = (item, keyword) => {\n  let word = keyword.toLowerCase();\n  return (\n    item.name.toLowerCase().includes(word) ||\n        matchCategories(item.categories, word)\n  );\n};\n\n/*\n * @param categories Array\n * @param keyword String\n * return boolean true if current restaurant's categories match keyword, otherwise, return\n * false\n */\nconst matchCategories = (categories, keyword) => {\n  return categories.some(\n    item =>\n      item.alias.toLowerCase().includes(keyword) ||\n            item.title.toLowerCase().includes(keyword)\n  );\n};\n","export const today = () => {\n  let now = new Date();\n  let yy = (now.getYear() % 100) + 2000;\n  let mm = now.getMonth() < 10 ? \"0\" + now.getMonth() : now.getMonth();\n  let dd = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n  return `${yy}-${mm}-${dd}`;\n};\n","import \"./style/reset.scss\";\nimport \"./style/header.scss\";\nimport \"./style/main.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport jsonData from \"./data/yelp_response_20181003.json\";\nimport {Category} from \"./components/category.js\";\nimport {ResultList} from \"./components/searchResult.js\";\nimport {ResultTitle} from \"./components/resultTitle.js\";\nimport {FilterOptions} from \"./components/FilterOptions.js\";\nimport {isRestaurantOpenNow} from \"./logic/openTime.js\";\nimport {getPriceState} from \"./logic/getPriceState.js\";\nimport {isMatchKeyword} from \"./logic/filterKeyword.js\";\nimport {mapWeekDay} from \"./logic/mapWeekday.js\";\nimport {today} from \"./logic/date.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // user input to filter search results\n      keyword: \"\",\n\n      // use to detect if all price tag haven't been selected yet\n      isFirstToggle: true,\n\n      // price tag to filter results\n      price: {$: true, $$: true, $$$: true, $$$$: true},\n\n      // is open now filter button selected\n      isOpenNow: false,\n\n      date: {display: today(), weekDay: mapWeekDay(new Date().getDay())}\n    };\n\n    [\n      \"updateKeyword\",\n      \"updatePrice\",\n      \"updateOpenTime\",\n      \"updateDate\"\n    ].forEach(name => {\n      this[name] = this[name].bind(this);\n    });\n  }\n\n  componentDidMount() {\n    // fetch json files, and sort fetched result by rating\n    const itemListData = jsonData.data.search.business.sort(\n      (itemA, itemB) => itemB.rating - itemA.rating\n    );\n\n    this.setState({list: itemListData});\n  }\n  updateDate(e) {\n    this.setState({\n      date: {\n        display: e.currentTarget.value,\n        weekDay: mapWeekDay(new Date(e.currentTarget.value).getDay())\n      }\n    });\n  }\n  updateKeyword(keyword) {\n    this.setState({keyword: keyword});\n  }\n  updatePrice(opt) {\n    this.setState(prevState => getPriceState(prevState, opt));\n  }\n  updateOpenTime() {\n    this.setState(prevState => {\n      return {\n        isOpenNow: !prevState.isOpenNow,\n        date: {\n          display: today(),\n          weekDay: mapWeekDay(new Date().getDay())\n        }\n      };\n    });\n  }\n\n  render() {\n    let list = this.state.list || [];\n\n    // filter results by price filter\n    if (list.length) {\n      list = list.filter((item, index) => {\n        return (\n          this.state.price[item.price] ||\n                    (this.state.isFirstToggle && item.price === null)\n        );\n      });\n    }\n\n    // filter results by if restaurants is open now.\n    if (this.state.isOpenNow) {\n      list = list.filter(item => isRestaurantOpenNow(item.hours));\n    }\n\n    // filter results by if a user inputs any keywowrd\n    if (this.state.keyword) {\n      list = list.filter(item =>\n        isMatchKeyword(item, this.state.keyword.toLowerCase())\n      );\n    }\n\n    return (\n      <div>\n        <header>\n          <div>\n            <div className=\"search-row\">\n              <input\n                type=\"text\"\n                value={this.state.keyword}\n                placeholder=\"Find a restanrant\"\n                onChange={e =>\n                  this.setState({\n                    keyword: e.currentTarget.value\n                  })\n                }\n              />\n              <input\n                className=\"date\"\n                type=\"date\"\n                value={this.state.date.display}\n                onChange={this.updateDate}\n              />\n            </div>\n            <Category\n              updateKeyword={this.updateKeyword}\n              options={[\n                \"Hot Pot\",\n                \"Seafood\",\n                \"Desserts\",\n                \"Brunch\",\n                \"Taiwanese\"\n              ]}\n            />\n          </div>\n        </header>\n        <main>\n          <div>\n            <ResultTitle count={list.length} />\n            <FilterOptions\n              isFirstToggle={this.state.isFirstToggle}\n              price={this.state.price}\n              isOpenNow={this.state.isOpenNow}\n              updatePrice={this.updatePrice}\n              updateDate={this.upateDate}\n              updateOpenTime={this.updateOpenTime}\n            />\n            <ResultList\n              updateKeyword={this.updateKeyword}\n              list={list}\n              date={this.state.date}\n            />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"main\"));\n","import {mapWeekDay} from \"../logic/mapWeekday.js\";\n\nexport const isRestaurantOpenNow = (hours) => {\n  let weekDay = mapWeekDay(new Date().getDay());\n  let nowHour = new Date().getHours();\n  let nowMin = new Date().getMinutes();\n  let now = \"\" + nowHour + nowMin;\n\n  return hours.some(slot => {\n    let isOpen = false;\n    for (let dayOpenTime in slot.open) {\n      if (\n        slot.open[dayOpenTime] &&\n                slot.open[dayOpenTime].day === weekDay\n      ) {\n        let {start, end} = slot.open[dayOpenTime];\n        // check if restarant open now\n        let isOpenNow =\n                    (start <= now && now <= end) ||\n                    (end <= start && (now <= end || now >= start));\n        if (isOpenNow) {\n          return true;\n        }\n      }\n    }\n    return isOpen;\n  });\n};\n"],"sourceRoot":""}